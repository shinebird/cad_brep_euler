set(CMAKE_CXX_STANDARD 23)
if (MSVC)
    option(GENERATE_DEBUG_INFO "Create debug info, useful for debugging" ON)
    if (GENERATE_DEBUG_INFO)
        set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /Zi")
        set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /DEBUG /OPT:REF /OPT:ICF")
        set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /DEBUG /OPT:REF /OPT:ICF")
        set(CMAKE_MODULE_LINKER_FLAGS_RELEASE "${CMAKE_MODULE_LINKER_FLAGS_RELEASE} /DEBUG /OPT:REF /OPT:ICF")
    endif(GENERATE_DEBUG_INFO)
endif(MSVC)

# find_package(Boost REQUIRED)
find_package(FreeGLUT REQUIRED)
find_package(VectorClass2 REQUIRED)
# find_package(TBB REQUIRED)


# string(REGEX REPLACE "/include.*$" "" Boost_ROOT ${Boost_INCLUDE_DIRS})
# set(Boost_LIBRARY_DIR "${Boost_ROOT}/lib" CACHE PATH "${Boost_ROOT}/lib")

file(GLOB_RECURSE homework_source *.cpp)
add_executable(homework1 ${homework_source})
target_include_directories(homework1 PRIVATE "../include")
if (MSVC)
    target_compile_options(homework1 PRIVATE -Zc:__cplusplus)
    target_compile_options(homework1 PRIVATE -permissive-)
    target_compile_options(homework1 PRIVATE -Zc:rvalueCast)
endif (MSVC)
# target_include_directories(homework1 PUBLIC ${Boost_INCLUDE_DIRS})
# target_link_directories(homework1 PRIVATE ${Boost_LIBRARY_DIR})
target_link_libraries(homework1 PRIVATE FreeGLUT::freeglut_static)
target_link_libraries(homework1 PRIVATE VectorClass2)
# target_link_libraries(homework1 PRIVATE TBB::tbb)
# target_link_libraries(homework1 PRIVATE TBB::tbbmalloc)